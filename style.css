body {
    margin: 0 auto; /*giving a 0 margin prevents from having white space around the page*/
    /* background-color: lightblue; */
    width: 80vw;
    min-width: 800px;        
    height: 100vw;
}

html {
    font-size: 10px;
    /* background-color: slategray; */
    background: linear-gradient(
        133deg, 
        rgba(235, 217, 181, 1) 0%,
        rgba(236, 105, 165, 1) 50%,
        rgba(89, 232, 247, 1) 100%
    );
}

h1, h2 {
    font-family: 'Raleway', sans-serif;
    color: #2a2a2a;
}

p, li {
    font-family: 'Roboto', sans-serif;
    color: #2a2a2a;
}
/* 
REMs are a way of setting font-based size, based on the font-size or the root HTML element. Allows you to quickly scale an entire project by changing the root font-size.

1 rem = 100% font size of the root element, default is 16px
ex: applied to h1: 4rem = 4*h1 
*/

h1 {
    font-size: 4rem;
    text-align: center;
    text-shadow: 2px 2px 10px black;
    text-transform: uppercase;
}

h2 {
    font-size: 3rem;
    text-align: center;
}

header {
    /* margin: 0 0 10px 0; */
    margin-bottom: 10px;
}

/* Commas state that we want to style "this" and "that" tag/element */
main, section, header, nav, article, aside, footer {
    background-color: rgba(255, 255, 255, .05);
    padding: 1%;
}

nav {
    height: 50px;
}

/* No commas state that we want to style "this" element WITHIN another/"that" element */
nav ul {
    display: flex;

}

/* Flex is shorthand for:
flex-grow
specifies how much the item will grow.
1 unit-less value (ie: the number 1 here)
flex-shrink
specifies how much the item will shrink
2 unit-less values (not shown)
flex-basis
specifies initial length of a flexible item
One value w/ unit
nav li will take up 100% of the container with. */

nav li {
    list-style-type: none;
    text-align: center;
    flex: 1;
}

nav a, li {
    font-size: 2rem;
    height: 3rem;
    text-transform: uppercase;
    text-decoration: none;
    color: black;
}

main {
    display: flex;
}

/* 4 = 80% of the container (4/4+1) */
section, article {
    flex: 4;
}

aside {
    flex: 1;
    margin-left: 10px;
    padding: 1%;
}

aside a {
    float: left;
    width: 50%;
}

aside img {
    max-width: 100%;
}

footer {
    margin-top: 10px;
}